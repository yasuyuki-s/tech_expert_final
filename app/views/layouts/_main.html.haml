.page-outer
  -if @tweet.errors.any?
    .alert-messages
      .message
        %a.close{href: ""}
          %i.fa.fa-times
        - @tweet.errors.full_messages.each do |msg|
          %span.message-text= msg
  -if notice
    .alert-messages
      .message
        %a.close{href: ""}
          %i.fa.fa-times
        %span.message-text= notice
  #page-container.AppContent.clearfix
    .dashboard
      .DashboardProfileCard
        = link_to(user_path(current_user), class: "DashboardProfileCard-bg u-bgUserColor") do
          - if current_user.image_canopy.present? then
            = image_tag(current_user.image_canopy.url, size: "288x95")
        .DashboardProfileCard-content
          .DashboardProfileCard-avatarContainer
            .avatar-settings
              = link_to user_path(current_user), class: "DashboardProfileCard-avatarLink" do
                - if current_user.image_avatar.present? then
                  = image_tag(current_user.image_avatar.url, class: "DashboardProfileCard-avatarImage")
                - else
                  .DashboardProfileCard-avatarImage.u-bgUserColor
                    %i.fa.fa-camera
          .DashboardProfileCard-userFields
            .DashboardProfileCard-name
              = link_to current_user.nickname, user_path(current_user), class: "u-textInheritColor"
            %span.DashboardProfileCard-screenname.u-inlineBlock
              = link_to user_path(current_user), class: "DashboardProfileCard-screennameLink" do
                %b.username
                  = "@" + current_user.name
          .ProfileCardStats
            %ul.ProfileCardStats-statList.Arrange.Arrange--bottom.Arrange-equal
              %li.ProfileCardStats-stat.Arrange-sizeFit
                = link_to(user_path(current_user), class: "ProfileCardStats-statLink u-textUserColor u-linkClean u-block") do
                  %span.ProfileCardStats-statLabel.u-block
                    ツイート
                  %span.ProfileCardStats-statValue
                    = current_user.tweets_count
              %li.ProfileCardStats-stat.Arrange-sizeFit
                = link_to(following_user_path(current_user), class: "ProfileCardStats-statLink u-textUserColor u-linkClean u-block") do
                  %span.ProfileCardStats-statLabel.u-block
                    フォロー
                  %span.ProfileCardStats-statValue#follows_count
                    = current_user.follows_count
              %li.ProfileCardStats-stat.Arrange-sizeFit
                = link_to(followers_user_path(current_user), class: "ProfileCardStats-statLink u-textUserColor u-linkClean u-block") do
                  %span.ProfileCardStats-statLabel.u-block
                    フォロワー
                  %span.ProfileCardStats-statValue
                    = current_user.followers_count
      .module
        .flex-module
          .flex-module-header
            %h3 ユーザーリスト
          .DashboardUserList
            %ol
              - User.all.each do |user|
                %li.DashboardUserList-item
                  .content
                    = link_to(user_path(user), class: "account-group", data_user_id: user.id) do
                      - if user.image_avatar.present? then
                        = image_tag(user.image_avatar.url, size: "48x48", class: "avatar")
                      - else
                        = image_tag("default_profile_normal.png",size: "48x48", class: "avatar")
                      %span.account-group-inner
                        %strong.fullname= user.nickname
                        %span.username= "@" + user.name
                    - if current_user != user then
                      .user-actions
                        %div{ class: current_user.following?(user) ? "following-button-wrapper" : "follow-button-wrapper"}
                          = form_tag(follow_relationships_path, method: :post, class: "follow-button") do
                            = hidden_field_tag :follow_to_id, user.id
                            = submit_tag("フォローする", class: "EdgeButton EdgeButton--secondary EdgeButton--small")
                          = form_tag(follow_relationships_path, method: :delete, class: "following-button") do
                            = hidden_field_tag :follow_to_id, user.id
                            = submit_tag("フォロー中", class: "EdgeButton EdgeButton--primary EdgeButton--small")

    .content-main.top-timeline-tweetbox
      .timeline-tweet-box
        .home-tweet-box
          - if current_user.image_avatar.present? then
            = image_tag(current_user.image_avatar.url,size: "32x32", class: "top-timeline-tweet-box-user-image")
          - else
            = image_tag("default_profile_normal.png",size: "32x32", class: "top-timeline-tweet-box-user-image")
          = form_for(@tweet, html:{class: "t1-form clearfix"}) do |f|
            .tweet-content
              .editor-container
                = f.text_area :tweet, autofocus: false, class: "editor", maxlength: "240", placeholder: "いまどうしてる？"
            .tweetboxtoolbar
              .TweetBoxExtras
                .TweetBoxExtras-item
                  = f.file_field :image, autocomplete: "false"
                  %button#tweet-image-choose-button
                    %i.fa.fa-picture-o
              .tweetboxtoolbar-tweetButton
                = f.submit "ツイート", class: "EdgeButton EdgeButton--medium EdgeButton--primary2"
      = render "layouts/tweets_stream"




